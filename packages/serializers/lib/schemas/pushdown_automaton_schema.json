{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Pushdown Automaton Schema",
  "description": "JSON schema for pushdown automata (PDA)",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the automaton"
    },
    "name": {
      "type": "string",
      "description": "Human-readable name for the automaton"
    },
    "states": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/State"
      },
      "description": "List of states in the automaton"
    },
    "transitions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PDATransition"
      },
      "description": "List of transitions in the automaton"
    },
    "inputAlphabet": {
      "$ref": "#/definitions/Alphabet",
      "description": "Input alphabet for the automaton"
    },
    "stackAlphabet": {
      "$ref": "#/definitions/Alphabet",
      "description": "Stack alphabet for the automaton"
    },
    "initialState": {
      "type": "string",
      "description": "ID of the initial state"
    },
    "finalStates": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of final state IDs"
    },
    "acceptanceMode": {
      "type": "string",
      "enum": ["finalState", "emptyStack", "both"],
      "description": "Acceptance mode for the PDA"
    },
    "metadata": {
      "$ref": "#/definitions/AutomatonMetadata",
      "description": "Metadata about the automaton"
    }
  },
  "required": ["id", "name", "states", "transitions", "inputAlphabet", "stackAlphabet", "initialState", "finalStates", "acceptanceMode", "metadata"],
  "definitions": {
    "State": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the state"
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the state"
        },
        "position": {
          "$ref": "#/definitions/Position",
          "description": "Position of the state in the canvas"
        },
        "isInitial": {
          "type": "boolean",
          "description": "Whether this state is the initial state"
        },
        "isAccepting": {
          "type": "boolean",
          "description": "Whether this state is an accepting state"
        }
      },
      "required": ["id", "name", "position", "isInitial", "isAccepting"]
    },
    "PDATransition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the transition"
        },
        "fromState": {
          "type": "string",
          "description": "ID of the source state"
        },
        "toState": {
          "type": "string",
          "description": "ID of the destination state"
        },
        "inputSymbol": {
          "type": "string",
          "description": "Input symbol for the transition"
        },
        "stackSymbol": {
          "type": "string",
          "description": "Stack symbol to read"
        },
        "nextStackSymbols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Stack symbols to write (in order)"
        }
      },
      "required": ["id", "fromState", "toState", "inputSymbol", "stackSymbol", "nextStackSymbols"]
    },
    "Position": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "X coordinate"
        },
        "y": {
          "type": "number",
          "description": "Y coordinate"
        }
      },
      "required": ["x", "y"]
    },
    "Alphabet": {
      "type": "object",
      "properties": {
        "symbols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of symbols in the alphabet"
        }
      },
      "required": ["symbols"]
    },
    "AutomatonMetadata": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "createdBy": {
          "type": "string",
          "description": "Creator of the automaton"
        }
      },
      "required": ["createdAt", "createdBy"]
    }
  }
}
