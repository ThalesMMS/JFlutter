JFlutter User Guide Supplement
==============================

Draw2D Canvas Toggle
--------------------

* Navigate to **Settings → Canvas**.
* Enable **Use Draw2D Canvas** to switch the FSA editor to the WebView-powered renderer.
* Tap **Save Settings**. The preference is persisted via `SharedPreferences` and propagated through Riverpod (`settingsProvider`).
* Return to the automaton workspace. Supported platforms render the Draw2D canvas; unsupported targets display a warning placeholder.
* The canvas toolbar shows “Canvas not connected” until the Draw2D bridge confirms the `editor_ready` handshake.

Bridge Message Reference
------------------------

### Flutter → Draw2D

| Command                | Payload summary                                                  | Notes |
| ---------------------- | ---------------------------------------------------------------- | ----- |
| `loadModel`            | Full automaton snapshot from `Draw2DAutomatonMapper.toJson`.      | Injected via `window.draw2dBridge.loadModel(...)` on mobile platforms. |
| `load_automaton`       | Automaton snapshot + viewport + optional simulation trace.       | Posted to the iframe on Flutter web builds. |
| `clear_automaton`      | `{}`                                                             | Clears the web canvas when no automaton is active. |
| `highlight`            | `{ states: string[], transitions: string[] }`                    | Keeps simulator highlights in sync (also echoed through `postMessage`). |
| `clear_highlight`      | `{}`                                                             | Removes simulator highlights. |
| `zoom_in` / `zoom_out` | `{}`                                                             | Updates the viewport zoom. |
| `reset_view`           | `{}`                                                             | Restores pan/zoom defaults. |
| `fit_content`          | `{}`                                                             | Frames the full automaton. |
| `add_state_center`     | `{}`                                                             | Adds a new state at the viewport centre. |

### Draw2D → Flutter

| Event `type`           | Payload highlights                                               | Flutter behaviour |
| ---------------------- | ---------------------------------------------------------------- | ----------------- |
| `editor_ready`         | `{}`                                                             | Marks the bridge as ready and triggers an immediate automaton sync. |
| `log`                  | `level`, `message`, optional `details`                           | Forwards diagnostics to Flutter logs. |
| `state.add`            | `id?`, `label?`, `x`, `y`, `isInitial?`, `isAccepting?`          | Adds or replaces a state via the automaton provider. |
| `state.move`           | `id`, `x`, `y`                                                   | Debounced to 60 ms batches before updating state positions. |
| `state.label`          | `id`, `label`                                                    | Renames the state. |
| `state.updateFlags`    | `id`, `isInitial?`, `isAccepting?`                               | Updates initial/accepting markers. |
| `state.remove`         | `id`                                                             | Removes the state. |
| `transition.add`       | `id?`, `fromStateId`, `toStateId`, `label?`                      | Creates or updates a transition. |
| `transition.label`     | `id`, `label`                                                    | Updates transition symbols. |
| `transition.remove`    | `id`                                                             | Removes the transition. |
| `patch`                | Partial automaton diff (web only).                               | Applied to the current FSA via `applyAutomatonPatchToFsa`. |
| `viewport_patch`       | `{ pan: {x, y}, zoom }` (web only).                               | Updates viewport metadata in Flutter state. |
| `request_automaton`    | `{}` (web only).                                                  | Forces a fresh automaton snapshot to be posted back. |

Manual Verification Checklist
-----------------------------

1. Enable the Draw2D toggle and save.
2. Wait for the toolbar to drop the “Canvas not connected” label (verifies `editor_ready`).
3. Inject `state.add`, `state.move`, and `transition.add` events from the browser console or integration harness and confirm the automaton list updates.
4. Trigger toolbar commands (`zoom_in`, `fit_content`, `add_state_center`) and confirm they map to the expected Draw2D behaviour.
5. Run `flutter analyze` (and `flutter test` once suites exist) before requesting review.

Troubleshooting
---------------

* **WebView unavailable**: The widget falls back to an instructional placeholder when the platform lacks WebView support.
* **Bridge not responding**: Check the console for malformed JSON. The bridge ignores invalid payloads by design.
* **Settings not persisting**: Ensure the settings dialog **Save** action completes; the provider mirrors the persisted value after success.
